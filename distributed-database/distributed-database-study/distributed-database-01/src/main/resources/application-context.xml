<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 引入数据库配置文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 扫描组件 -->
    <context:component-scan base-package="com.distributed.db">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 数据源 -->
    <bean id="dataSource01" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc01.jdbcUrl}"/>
        <property name="user" value="${jdbc01.user}"/>
        <property name="password" value="${jdbc01.password}"/>
        <property name="autoCommitOnClose" value="${jdbc01.autoCommitOnClose}" />
         <property name="checkoutTimeout" value="${jdbc01.checkoutTimeout}"/>
        <property name="initialPoolSize" value="${jdbc01.minPoolSize}" />
        <property name="minPoolSize" value="${jdbc01.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc01.maxPoolSize}" />
        <property name="maxIdleTime" value="${jdbc01.maxIdleTime}" />
        <property name="acquireIncrement" value="${jdbc01.acquireIncrement}" />
        <property name="maxIdleTimeExcessConnections" value="${jdbc01.maxIdleTimeExcessConnections}" />
    </bean>

    <bean id="dataSource02" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc02.jdbcUrl}"/>
        <property name="user" value="${jdbc02.user}"/>
        <property name="password" value="${jdbc02.password}"/>
        <property name="autoCommitOnClose" value="${jdbc02.autoCommitOnClose}" />
        <property name="checkoutTimeout" value="${jdbc02.checkoutTimeout}"/>
        <property name="initialPoolSize" value="${jdbc02.minPoolSize}" />
        <property name="minPoolSize" value="${jdbc02.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc02.maxPoolSize}" />
        <property name="maxIdleTime" value="${jdbc02.maxIdleTime}" />
        <property name="acquireIncrement" value="${jdbc02.acquireIncrement}" />
        <property name="maxIdleTimeExcessConnections" value="${jdbc02.maxIdleTimeExcessConnections}" />
    </bean>

    <bean id="dataSource03" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc03.jdbcUrl}"/>
        <property name="user" value="${jdbc03.user}"/>
        <property name="password" value="${jdbc03.password}"/>
        <property name="autoCommitOnClose" value="${jdbc03.autoCommitOnClose}" />
        <property name="checkoutTimeout" value="${jdbc03.checkoutTimeout}"/>
        <property name="initialPoolSize" value="${jdbc03.minPoolSize}" />
        <property name="minPoolSize" value="${jdbc03.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc03.maxPoolSize}" />
        <property name="maxIdleTime" value="${jdbc03.maxIdleTime}" />
        <property name="acquireIncrement" value="${jdbc03.acquireIncrement}" />
        <property name="maxIdleTimeExcessConnections" value="${jdbc03.maxIdleTimeExcessConnections}" />
    </bean>

    <bean id="dataSource04" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc04.jdbcUrl}"/>
        <property name="user" value="${jdbc04.user}"/>
        <property name="password" value="${jdbc04.password}"/>
        <property name="autoCommitOnClose" value="${jdbc04.autoCommitOnClose}" />
        <property name="checkoutTimeout" value="${jdbc04.checkoutTimeout}"/>
        <property name="initialPoolSize" value="${jdbc04.minPoolSize}" />
        <property name="minPoolSize" value="${jdbc04.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc04.maxPoolSize}" />
        <property name="maxIdleTime" value="${jdbc04.maxIdleTime}" />
        <property name="acquireIncrement" value="${jdbc04.acquireIncrement}" />
        <property name="maxIdleTimeExcessConnections" value="${jdbc04.maxIdleTimeExcessConnections}" />
    </bean>

    <bean id="dataSource05" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc05.jdbcUrl}"/>
        <property name="user" value="${jdbc05.user}"/>
        <property name="password" value="${jdbc05.password}"/>
        <property name="autoCommitOnClose" value="${jdbc05.autoCommitOnClose}" />
        <property name="checkoutTimeout" value="${jdbc05.checkoutTimeout}"/>
        <property name="initialPoolSize" value="${jdbc05.minPoolSize}" />
        <property name="minPoolSize" value="${jdbc05.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc05.maxPoolSize}" />
        <property name="maxIdleTime" value="${jdbc05.maxIdleTime}" />
        <property name="acquireIncrement" value="${jdbc05.acquireIncrement}" />
        <property name="maxIdleTimeExcessConnections" value="${jdbc05.maxIdleTimeExcessConnections}" />
    </bean>

    <bean id="dataSource06" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc06.jdbcUrl}"/>
        <property name="user" value="${jdbc06.user}"/>
        <property name="password" value="${jdbc06.password}"/>
        <property name="autoCommitOnClose" value="${jdbc06.autoCommitOnClose}" />
        <property name="checkoutTimeout" value="${jdbc06.checkoutTimeout}"/>
        <property name="initialPoolSize" value="${jdbc06.minPoolSize}" />
        <property name="minPoolSize" value="${jdbc06.minPoolSize}" />
        <property name="maxPoolSize" value="${jdbc06.maxPoolSize}" />
        <property name="maxIdleTime" value="${jdbc06.maxIdleTime}" />
        <property name="acquireIncrement" value="${jdbc06.acquireIncrement}" />
        <property name="maxIdleTimeExcessConnections" value="${jdbc06.maxIdleTimeExcessConnections}" />
    </bean>

    <bean id="dataSources" class="com.caland.sun.client.datasources.DefaultDataSourceService">
        <property name="dataSourceDescriptors">
            <set>
                <!-- 数据库分片一 -->
                <bean class="com.caland.sun.client.datasources.DataSourceDescriptor">
                    <property name="identity" value="partition1"/>
                    <!-- 指定数据源1 -->
                    <property name="targetDataSource" ref="dataSource01"/>
                    <!-- 对数据源1进行心跳检测 -->
                    <property name="targetDetectorDataSource" ref="dataSource01"/>
                    <!-- 指定备机数据源4 -->
                    <property name="standbyDataSource" ref="dataSource04"/>
                    <!-- 对备机数据源4进行心跳检测 -->
                    <property name="standbyDetectorDataSource" ref="dataSource04"/>
                </bean>
                <!-- 数据库分片二 -->
                <bean class="com.caland.sun.client.datasources.DataSourceDescriptor">
                    <property name="identity" value="partition2"/>
                    <property name="targetDataSource" ref="dataSource02"/>
                    <property name="targetDetectorDataSource" ref="dataSource02"/>
                    <property name="standbyDataSource" ref="dataSource05"/>
                    <property name="standbyDetectorDataSource" ref="dataSource05"/>
                </bean>
                <!-- 数据库分片三 -->
                <bean class="com.caland.sun.client.datasources.DataSourceDescriptor">
                    <property name="identity" value="partition3"/>
                    <property name="targetDataSource" ref="dataSource03"/>
                    <property name="targetDetectorDataSource" ref="dataSource03"/>
                    <property name="standbyDataSource" ref="dataSource06"/>
                    <property name="standbyDetectorDataSource" ref="dataSource06"/>
                </bean>
            </set>
        </property>
        <property name="haDataSourceCreator">
            <bean class="com.caland.sun.client.datasources.ha.FailoverHotSwapDataSourceCreator">
                <property name="detectingSql" value="select 1"/>
            </bean>
        </property>
    </bean>

    <bean id="hashFunction" class="com.distributed.db.hash.HashFunction"/>

    <bean id="internalRouter" class="com.caland.sun.client.router.config.InteralRouterXmlFactoryBean">
        <property name="functionsMap">
            <map>
                <entry key="hash" value-ref="hashFunction"/>
            </map>
        </property>
        <property name="configLocations">
            <list>
                <!-- 路由规则文件 -->
                <value>classpath:/dbrule/sharding-rules-on-namespace.xml</value>
            </list>
        </property>
    </bean>

    <!-- 事务管理 -->
    <bean id="transactionManager" class="com.caland.sun.client.transaction.MultipleDataSourcesTransactionManager">
        <property name="dataSourceService" ref="dataSources"/>
        <property name="transactionSynchronization" value="2"/>
    </bean>

    <!-- 开启基于注解的事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 定义 SqlSessionFactory -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource01"/>
        <!-- 类型别名 -->
        <property name="typeAliasesPackage" value="com.distributed.db.domain"/>
        <!--指定 SQL 映射文件的位置 -->
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>
        <!-- 指定 MyBatis 全局配置文件的位置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!-- 定义 SqlSessionTemplate -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean"/>
    </bean>

    <!-- 扫描 MyBatis 的 Mapper 接口 -->
    <mybatis-spring:scan base-package="com.distributed.db.dao"/>

</beans>
