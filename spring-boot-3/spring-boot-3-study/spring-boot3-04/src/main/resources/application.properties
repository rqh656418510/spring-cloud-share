# 开启静态资源映射
spring.web.resources.add-mappings=true

# 缓存周期（秒）
spring.web.resources.cache.period=3600

# HTTP 缓存控制（秒），浏览器第一次请求服务器时，服务器会告诉浏览器此资源缓存7200秒，即7200秒以内访问此资源的所有请求都不会发送给服务器
spring.web.resources.cache.cachecontrol.max-age=7200

# 是否使用 Last-Modified 头，对比服务器和浏览器的资源是否有变化，如果资源没有变化，服务器会返回304码，此时浏览器会使用本地缓存中的资源
spring.web.resources.cache.use-last-modified=true

# 自定义静态资源访问路径的前缀
# spring.mvc.static-path-pattern=/static/**

# 自定义webjars访问路径的前缀
# spring.mvc.webjars-path-pattern=/webjars/**

# 自定义静态资源文件夹的位置
# spring.web.resources.static-locations=classpath:/static/,classpath:/public/,classpath:/asset/

# 切换路径匹配策略，ant_path_matcher 是旧版策略，path_pattern_parser 是新版策略
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# 开启基于请求参数的内容协商功能，此功能默认不开启，默认的参数名为 format
spring.mvc.contentnegotiation.favor-parameter=true

# 指定内容协商时使用的参数名，默认的参数名为 format
spring.mvc.contentnegotiation.parameter-name=type

# 新增一种媒体类型
spring.mvc.contentnegotiation.media-types.yaml=text/yaml

# 模板引擎
spring.thymeleaf.enabled=true
spring.thymeleaf.cache=true
spring.thymeleaf.mode=HTML
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.check-template-location=true

# 国际化
spring.messages.encoding=UTF-8
spring.messages.basename=messages

# 启用 ProblemDetails
spring.mvc.problemdetails.enabled=true