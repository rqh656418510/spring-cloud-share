server:
  port: 8021

spring:
  application:
    name: cloud-consumer-feign-order-service
  # 日期序列化格式
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  cloud:
    # Consul
    consul:
      host: 192.168.56.112
      port: 8500
      discovery:
        prefer-ip-address: true  # 优先使用服务IP进行注册
        service-name: ${spring.application.name}
        heartbeat:
          enabled: true
    # OpenFeign
    openfeign:
      # 使用 Apache HttpClient 5 替换
      httpclient:
        hc5:
          enabled: true
      # 启用请求/响应压缩
      compression:
        request:
          enabled: true
          min-request-size: 2048
          mime-types: text/xml,application/xml,application/json
        response:
          enabled: true
      client:
        config:
          # 全局配置
          default:
            connectTimeout: 20000
            readTimeout: 20000
          # 为特定的服务单独配置
          cloud-payment-service:
            connectTimeout: 30000
            readTimeout: 30000
      # 开启断路器和分组激活
      circuitbreaker:
        enabled: true
        group:
          enabled: true  # 没有开启分组则永远不用分组的配置。精确优先、分组次之（开了分组）、默认最后

# Resilience4j
resilience4j:
  # 超时处理
  timelimiter:
    configs:
      default:
        timeout-duration: 20s  # 神坑的位置，timelimiter 默认限制请求处理耗时为 1s，超过 1s 就会认为请求超时，如果配置了降级，就会走降级逻辑
  # 断路器
  circuitbreaker:
    configs:
      # 断路器的默认配置
      default:
        failureRateThreshold: 50  # 设置 50% 的调用失败时打开断路器，超过失败请求百分⽐ CircuitBreaker 将切换为 OPEN 状态
        slidingWindowType: COUNT_BASED  # 滑动窗口的类型，可选 COUNT_BASED 和 TIME_BASED，默认为 COUNT_BASED
        slidingWindowSize: 6  # 滑动窗⼝的⼤⼩，配置 COUNT_BASED 时表示 6 个请求，配置 TIME_BASED 时表示 6 秒
        minimumNumberOfCalls: 6  # 断路器计算失败率或慢调用率之前所需的最小样本（每个滑动窗口周期）。如果 minimumNumberOfCalls 为 10，则必须最少记录 10 个样本，然后才能计算失败率。如果只记录了 9 次调用，即使所有 9 次调用都失败，断路器也不会开启
        automaticTransitionFromOpenToHalfOpenEnabled: true  # 是否启用自动从开启状态切换到半开状态，默认值为 true。如果启用，CircuitBreaker 将自动从开启状态切换到半开状态，并允许一些请求通过以测试服务是否恢复正常
        waitDurationInOpenState: 5s  # 断路器从 OPEN 状态到 HALF_OPEN 状态需要等待的时间
        permittedNumberOfCallsInHalfOpenState: 2  # 半开状态允许的最大请求数，默认值为 10
        recordExceptions:
          - java.lang.Exception
    instances:
      # 指定特定的服务实例或者方法使用哪个断路器配置，还可以在每个实例下进行自定义配置
      cloud-payment-service:
        baseConfig: default
  # 隔离（舱壁）
  bulkhead:
    configs:
      # 隔离（舱壁）的默认配置
      default:
        maxConcurrentCalls: 2  # 隔离允许并发执行的最大线程数
        maxWaitDuration: 1s  # 当达到最大并发执行数量时，新的线程执行时将会被阻塞，这个属性表示线程最长的阻塞等待时间；如果等待超时，直接走 Fallback 兜底处理
    instances:
      # 指定特定的服务实例或者方法使用哪个隔离（舱壁）配置，还可以在每个实例下进行自定义配置
      cloud-payment-service:
        baseConfig: default
  ## 限流
  ratelimiter:
    configs:
      # 限流的默认配置
      default:
        limitForPeriod: 2  # 在一次刷新周期内，允许执行的最大请求数
        limitRefreshPeriod: 1s  # 限流器每隔 limitRefreshPeriod 刷新一次，并将允许处理的最大请求数量重置为 limitForPeriod
        timeout-duration: 1  # 线程等待权限的默认等待时间
    instances:
      # 指定特定的服务实例或者方法使用哪个限流配置，还可以在每个实例下进行自定义配置
      cloud-payment-service:
        baseConfig: default

# 日志输出
logging:
  level:
    # OpenFeign日志以什么级别打印哪个接口
    com.turing.cloud.api.PayFeignApi: debug

management:
  # Zipkin
  zipkin:
    tracing:
      endpoint: http://192.168.56.112:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0  # 采样率默认为 0.1（这里的 0.1 表示 10 次只能有一次被记录下来)，值越大收集越及时
